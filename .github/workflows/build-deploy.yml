name: Build and Deploy Code
# Might have a workflow for one branch, and another one for a different branch
#on:  #Tells when we should complete this action [push, pull_request]
#  push:
#    branches:  #["main", "another_branch", "freature_branch"] or the following
#      - "main"
#      - "another_branch"
#  pull_request:
#    branches:
#      - "test_branch"

on: [push, pull_request]
#Job is a list of steps that is going to run on a specific runner

#env: universal environment varibles
#  DATABASE_HOSTNAME=localhost


jobs: 
  job1:
    environment:
      name: tesing
    env: # This is job only envs. will get removed once job is done
      #DATABASE_HOSTNAME: localhost # Still dont want to hardcode these env variables into my github repo
      DATBASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}  #Can do this through secrets in github repo. Might be clash betwen env and global secrets
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}} #need to figure out how to have dollar signs and stuff in yml
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}      
    runs-on: ubuntu-latest #go to workflow syntax to see what OS we can run on 
    steps: 
      - name: pulling git repo
        uses: actions/checkout@v4 #github marketplace has prebuild actions to use, such as checkout
        #name: say hi to James
        #run: echo "hello James"       #sudo apt install
        #Can setup a matrix to test versions of python, same with operating systems
      - name: install python 
        uses: actions/setup-python@v5
        with: 
          python-version: '3.13' 
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: | #called pipe
          pip install pytest
          pytest -v
      
